#!/bin/bash
#
# This script is run by git after a push has been made to the repository

set -e
unset GIT_DIR # whithout this we get git errors "remote: fatal: Not a git repository: '.'" when the script is started by a push (not when executed locally)

echo ----- Run CppCodeBaseJenkinsjob post-receive hook -----

set jenkinsUrl=@JENKINS_URL@                                            # The base url of the jenkins server on which a job is triggered e.g. http://localhost:8080
set jenkinsUser=@JENKINS_USER@                                          # The user that triggers the job
set jenkinsPassword=@JENKINS_PASSWORD@                                  # The password of that user
set jenkinsJobBaseName=@JENKINS_JOB_BASENAME@                           # The name of the job without the version number.
set CppCodeBaseJenkinsjobVersion=@CPPCODEBASE_JENKINSJOB_VERSION@       # The version of this package.

function triggerJenkinsJob()
{
    branch=$1
    jobName=$jenkinsJobBaseName-$CppCodeBaseJenkinsjobVersion

    # filter out pushes that do noot seem to belong to an integration branch
    filterPattern="^.*-int-.*$"

    if [[ "$branch" =~ $filterPattern ]]; then 
        echo "Trigger jenkins job" $jobName "for branch" $branch

        # Trigger the parameterized build-job and pass it the branch name as argument.
        curl $jenkinsUrl/job/$jobName/build \
        --user $jenkinsUser:$jenkinsPassword \
        --data-urlencode json='{"parameter": [{"name":"branchOrTag", "value":"'$branch'"}]}'
    fi
}

# The information about pushed branches is given to script over the input stream
# This stream contains a line for each branch that was pushed.
# Each line looks something like 2b3a00c587a4df993d608b82ab31321b88037dc9 18f998b61f0fe5069e5666a33863b70bf44a12f8 refs/heads/Knitschi-master
# Where the first hash probably marks the first pushed commit and the second the last pushed commit.
# The last element contains the name of the branch.
while read oldrev newrev refname
do
    # get the latest version of trigger script
    # get the pure branch name
    pushedBranch=$(basename $refname)
    triggerJenkinsJob $pushedBranch
done




