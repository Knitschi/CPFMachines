<?xml version='1.0' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.12.1">
  <actions>
    <io.jenkins.blueocean.service.embedded.BlueOceanUrlAction plugin="blueocean-rest-impl@1.1.5">
      <blueOceanUrlObject class="io.jenkins.blueocean.service.embedded.BlueOceanUrlObjectImpl">
        <mappedUrl>blue/organizations/jenkins/BuildCppCodeBaseAssistant</mappedUrl>
      </blueOceanUrlObject>
    </io.jenkins.blueocean.service.embedded.BlueOceanUrlAction>
  </actions>
  <description>Builds the pipeline target of a BuildCppCodeBaseAssistant project.</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>5</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>branchOrTag</name>
          <description>Determines the git reference that will be build. This can be a branch or a tag.

Branch:
origin/Knitschi-int-master
Tag:
0.1.3
</description>
          <defaultValue>origin/Knitschi-int-master</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>task</name>
          <description>This can be set to

integration: 
Assumes that branch is a branch that follows the &lt;name&gt;-int-&lt;MainBranch&gt; naming convention. The job will create an temporary branch that merges the integration branch into the main branch. If the build is successful, the integration branch is merged into the main branch and the commit is tagged.

rebuild:
This option can be used to build a tag that has already been integrated or should not be integrated.
This is usefull when restoring old build artifacts. In this case no commits to the repository will be made. 

incrementMajor:
Create a release version with incremented major version number.

incrementMinor:
Create a release version with incremented minor version number.

incrementPatch:
Create a release version with incremented patch version number.</description>
          <defaultValue>integration</defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <org.jenkinsci.plugins.workflow.job.properties.DisableConcurrentBuildsJobProperty/>
    <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
      <triggers/>
    </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsScmFlowDefinition" plugin="workflow-cps@2.37">
    <scm class="hudson.plugins.git.GitSCM" plugin="git@3.5.0">
      <configVersion>2</configVersion>
      <userRemoteConfigs>
        <hudson.plugins.git.UserRemoteConfig>
          <url>ssh://admin@datenbunker/share/GitRepositories/CppCodeBaseJenkinsfile.git</url>
        </hudson.plugins.git.UserRemoteConfig>
      </userRemoteConfigs>
      <branches>
        <hudson.plugins.git.BranchSpec>
          <name>$branchOrTag</name>
        </hudson.plugins.git.BranchSpec>
      </branches>
      <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
      <submoduleCfg class="list"/>
      <extensions/>
    </scm>
    <scriptPath>JenkinsPipelineScript.groovy</scriptPath>
    <lightweight>false</lightweight>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>