
# The docker image file for the jenkins slave nodes.
# 
# This is a debian based container that includes the tools that are required to execute a CPF build-pipeline.

FROM ubuntu:20.04

# Prevents the need of user interaction with "Configuring tzdata"
ENV DEBIAN_FRONTEND=noninteractive 


# ----------------------- ADD USER JENKINS -------------------------------
# Set user jenkins to the image 
RUN useradd -m -d /home/jenkins -s /bin/sh jenkins &&\
    echo "jenkins:jenkins" | chpasswd

    
# ----------------------- INSTALL BASIC TOOLS -------------------------------
# install basic tools
# - wget to download packages
# - openssh-server needed to allow the build master to access the slave
# - vim for manual editing files
# - netcat can be used to manuall examine the network when debugging the container
# - tree is used when running the pipeline for debug purposes
# - git for downloading the code-base
# - python is used to implement the build-pipeline.
RUN apt-get -q update && apt-get -q -y install \
build-essential \
llvm-10 \
cmake \
wget \
openssh-server \
vim \
netcat \
tree \
unzip \
git \
python3 \
python3-pip \
xvfb \
graphviz \
valgrind \
ninja-build \
abi-compliance-checker \
universal-ctags \
abi-dumper \
abi-compliance-checker \
openjdk-8-jdk \
doxygen


# ----------------- INSTALL PYTHON Modules --------------
# This should be done in the cmake code of the package-project
RUN python3 -m pip install \
paramiko \
requests \
sphinx \
conan


# ----------------- Configure Git --------------
USER jenkins
RUN git config --global user.email "not@valid.com" &&\
    git config --global user.name "jenkins" &&\
    git config --global credential.helper 'store --file ~/.jenkins-git-credentials'


# ----------------- Configure Conan --------------
# Add the additional bincrafters package repository 
RUN conan remote add bincrafters https://api.bintray.com/conan/bincrafters/public-conan



USER root
    
# --------------- PREPARE SSH DEAMON ---------------     
# prepare running sshd
RUN sed -i 's|session required pam_loginuid.so|session optional pam_loginuid.so|g' /etc/pam.d/sshd &&\
    mkdir -p /var/run/sshd
    
COPY ssh_config /etc/ssh/sshd_config

# -------------- Create some directories and copy some files -----------
RUN mkdir /home/jenkins/.ssh &&\
mkdir /home/jenkins/bin &&\
mkdir -p /home/jenkins/.ssh &&\
chown -R jenkins:jenkins /home/jenkins/.ssh

 # This file is run by the jenkins-master to start the slave
COPY agent.jar /home/jenkins/bin/agent.jar         
RUN chown -R jenkins:jenkins /home/jenkins/bin
 
  
# ----------------- JAVA ----------------------
# Install JDK 8 (latest edition) 
#RUN echo "deb http://debian.netcologne.de/debian jessie-backports main" | tee --append /etc/apt/sources.list &&\
#      apt-get update &&\
#      apt-get install -y -t jessie-backports openjdk-8-jdk

#RUN apt-get update &&\
#    apt-get install -y openjdk-8-jdk



# Run the sshd server as command to keep the container alive.
CMD ["/usr/sbin/sshd", "-D"]
